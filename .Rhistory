library(ggplot2)
library(plyr)
installr
install.packages("installr")
library(installr)
updateR()
##Set program locale to English
Sys.setlocale(category = "LC_ALL", locale = "English")
##Load Libraries
if (!require("data.table")) {
install.packages("data.table")
}
if (!require("reshape2")) {
install.packages("reshape2")
}
require("data.table")
require("reshape2")
library(data.table)
library(reshape2)
##Full path to data
dataPath <- file.path(getwd(), "UCI HAR Dataset")
##Set program locale to English
Sys.setlocale(category = "LC_ALL", locale = "English")
##Load Libraries
if (!require("data.table")) {
install.packages("data.table")
}
if (!require("reshape2")) {
install.packages("reshape2")
}
require("data.table")
require("reshape2")
library(data.table)
library(reshape2)
##Full path to data
dataPath <- file.path(getwd(), "UCI HAR Dataset")
##Set program locale to English
Sys.setlocale(category = "LC_ALL", locale = "English")
##Load Libraries
if (!require("data.table")) {
install.packages("data.table")
}
if (!require("reshape2")) {
install.packages("reshape2")
}
require("data.table")
require("reshape2")
library(data.table)
library(reshape2)
##Full path to data
dataPath <- file.path(getwd(), "UCI HAR Dataset")
dataTrainSubject <- fread(file.path(dataPath, "train", "subject_train.txt"))
dataTestSubject  <- fread(file.path(dataPath, "test" , "subject_test.txt" ))
dataTrainLabel <- fread(file.path(dataPath, "train", "Y_train.txt"))
dataTestLabel  <- fread(file.path(dataPath, "test" , "Y_test.txt" ))
dataTrainData <- data.table(read.table(file.path(dataPath, "train", "X_train.txt")))
dataTestData  <- data.table(read.table(file.path(dataPath, "test" , "X_test.txt" )))
setwd("C:/Users/shawnlin/Dropbox/Coursera/getdata-010/p1")
dataPath <- file.path(getwd(), "UCI HAR Dataset")
dataTrainSubject <- fread(file.path(dataPath, "train", "subject_train.txt"))
dataTestSubject  <- fread(file.path(dataPath, "test" , "subject_test.txt" ))
dataTrainLabel <- fread(file.path(dataPath, "train", "Y_train.txt"))
dataTestLabel  <- fread(file.path(dataPath, "test" , "Y_test.txt" ))
dataTrainData <- data.table(read.table(file.path(dataPath, "train", "X_train.txt")))
dataTestData  <- data.table(read.table(file.path(dataPath, "test" , "X_test.txt" )))
View(dataTrainData)
View(dataTrainData)
View(dataTrainLabel)
View(dataTrainLabel)
View(dataTrainSubject)
View(dataTrainSubject)
## -    Combine Train and Test Subject
dataSubject <- rbind(dataTrainSubject, dataTestSubject)
setnames(dataSubject, "V1", "SUBJECT_NUM")
## -    Combine Train and Test Labels
dataLabel<- rbind(dataTrainLabel, dataTestLabel)
setnames(dataLabel, "V1", "LABEL_NUM")
## -    Create One Data Set
dataOne <- cbind(cbind(dataSubject, dataLabel), rbind(dataTrainData, dataTestData))
setkey(dataOne, SUBJECT_NUM, LABEL_NUM)
View(dataOne)
View(dataOne)
dataFeatures <- fread(file.path(dataPath, "features.txt"))
View(dataFeatures)
View(dataFeatures)
subDataFeatures <- dataFeatures[grepl("mean\\(\\)|std\\(\\)", V2)]
View(subDataFeatures)
View(subDataFeatures)
subDataFeatures$V1 <- subDataFeatures[, paste0("V", V1)]
View(subDataFeatures)
View(subDataFeatures)
View(dataOne)
View(dataOne)
View(dataTrainData)
View(subDataFeatures)
View(dataTestSubject)
View(dataFeatures)
subDataOne <- dataOne[, c(key(dataOne), subDataFeatures$V1), with=FALSE]
View(subDataOne)
View(subDataOne)
View(dataTrainData)
View(dataTrainData)
View(dataLabel)
View(dataLabel)
View(dataTestSubject)
View(dataTestSubject)
dataActivityName <- fread(file.path(dataPath, "activity_labels.txt"))
setnames(dataActivityName, names(dataActivityName), c("LABEL_NUM", "ACTIVITY_NAME"))
View(dataActivityName)
View(dataActivityName)
dataActivityName <- fread(file.path(dataPath, "activity_labels.txt"))
View(dataActivityName)
setnames(dataActivityName, names(dataActivityName), c("LABEL_NUM", "ACTIVITY_NAME"))
View(dataActivityName)
View(dataActivityName)
dataActivityName <- fread(file.path(dataPath, "activity_labels.txt"))
View(dataActivityName)
setnames(dataActivityName, names(dataActivityName), c("LABEL_NUM", "ACTIVITY_NAME"))
View(dataActivityName)
subDataWithActivityName <- merge(subDataOne, dataActivityName, by="LABEL_NUM", all.x=TRUE)
View(subDataWithActivityName)
View(subDataFeatures)
subDataFeatures[, "fDomain":= ""]
subDataFeatures[grepl("^t", subDataFeatures$V2),"fDomain":= "Time"]
subDataFeatures[grepl("^f", subDataFeatures$V2),"fDomain":= "Freq"]
View(subDataFeatures)
## -    Add Descriptive Labels for instrument used
subDataFeatures[, "fInstrument":= ""]
subDataFeatures[grepl("Acc", subDataFeatures$V2),"fInstrument":= "Accelerometer"]
subDataFeatures[grepl("Gyro", subDataFeatures$V2),"fInstrument":= "Gyroscope"]
## -    Add Descriptive Labels for whether acceleration was used
subDataFeatures[, "fAcceleration":= ""]
subDataFeatures[grepl("BodyAcc", subDataFeatures$V2),"fAcceleration":= "Body"]
subDataFeatures[grepl("GravityAcc", subDataFeatures$V2),"fAcceleration":= "Gravity"]
## -    Add Descriptive Labels for whether Mean/SD was used
subDataFeatures[, "fVariable":= ""]
subDataFeatures[grepl("mean()", subDataFeatures$V2),"fVariable":= "Mean"]
subDataFeatures[grepl("std()", subDataFeatures$V2),"fVariable":= "SD"]
## -    Add Descriptive Labels for Axis
subDataFeatures[, "fAxis":= ""]
subDataFeatures[grepl("-X", subDataFeatures$V2),"fAxis":= "X"]
subDataFeatures[grepl("-Y", subDataFeatures$V2),"fAxis":= "Y"]
subDataFeatures[grepl("-Z", subDataFeatures$V2),"fAxis":= "Z"]
## -    Add Descriptive Labels if Jerk
subDataFeatures[, "fJerk":= ""]
subDataFeatures[grepl("Jerk", subDataFeatures$V2),"fJerk":= "Jerk"]
## -    Add Descriptive Labels if Manganitude
subDataFeatures[, "fMagnitude":= ""]
subDataFeatures[grepl("Mag", subDataFeatures$V2),"fMagnitude":= "Magnitude"]
Descriptive_Varitable_Names <- paste0(subDataFeatures$fVariable, subDataFeatures$fJerk, subDataFeatures$fDomain, subDataFeatures$fMagnitude, "Of", subDataFeatures$fAcceleration,subDataFeatures$fInstrument, subDataFeatures$fAxis)
subDataFeatures[, "DESCRIPTIVE_VARIABLE_NAMES":= Descriptive_Varitable_Names]
setnames(subDataWithActivityName,  names(subDataWithActivityName), c("LABEL_NUM", "SUBJECT_NUM", subDataFeatures$DESCRIPTIVE_VARIABLE_NAMES, "ACTIVITY_NAME"))
View(subDataWithActivityName)
View(subDataFeatures)
View(subDataFeatures)
##Set program locale to English
Sys.setlocale(category = "LC_ALL", locale = "English")
##Load Libraries
if (!require("data.table")) {
install.packages("data.table")
}
if (!require("reshape2")) {
install.packages("reshape2")
}
require("data.table")
require("reshape2")
library(data.table)
library(reshape2)
##Full path to data
dataPath <- file.path(getwd(), "UCI HAR Dataset")
## 1. Merges the training and the test sets to create one data set.
## -    Read in data from the files
dataTrainSubject <- fread(file.path(dataPath, "train", "subject_train.txt"))
dataTestSubject  <- fread(file.path(dataPath, "test" , "subject_test.txt" ))
dataTrainLabel <- fread(file.path(dataPath, "train", "Y_train.txt"))
dataTestLabel  <- fread(file.path(dataPath, "test" , "Y_test.txt" ))
dataTrainData <- data.table(read.table(file.path(dataPath, "train", "X_train.txt")))
dataTestData  <- data.table(read.table(file.path(dataPath, "test" , "X_test.txt" )))
## -    Combine Train and Test Subject
dataSubject <- rbind(dataTrainSubject, dataTestSubject)
setnames(dataSubject, "V1", "SUBJECT_NUM")
## -    Combine Train and Test Labels
dataLabel<- rbind(dataTrainLabel, dataTestLabel)
setnames(dataLabel, "V1", "LABEL_NUM")
## -    Create One Data Set
dataOne <- cbind(cbind(dataSubject, dataLabel), rbind(dataTrainData, dataTestData))
setkey(dataOne, SUBJECT_NUM, LABEL_NUM)
## 2. Extracts only the measurements on the mean and standard deviation for each measurement.
## -    Read in data from files
dataFeatures <- fread(file.path(dataPath, "features.txt"))
## -    Create a subset of measurements for the mean and standard deviation.
subDataFeatures <- dataFeatures[grepl("mean\\(\\)|std\\(\\)", V2)]
## -    Convert representation of column names to match those of dataOne
subDataFeatures$V1 <- subDataFeatures[, paste0("V", V1)]
## -    Extract subset that contains measurements on the mean and standard deviation.
subDataOne <- dataOne[, c(key(dataOne), subDataFeatures$V1), with=FALSE]
## 3. Uses descriptive activity names to name the activities in the data set
## -    Read in data from files
dataActivityName <- fread(file.path(dataPath, "activity_labels.txt"))
setnames(dataActivityName, names(dataActivityName), c("LABEL_NUM", "ACTIVITY_NAME"))
## -    Add descriptive activity name column
subDataWithActivityName <- merge(subDataOne, dataActivityName, by="LABEL_NUM", all.x=TRUE)
## 4. Appropriately labels the data set with descriptive variable names.
## -    Add Descriptive Labels for Time/Freq domain
subDataFeatures[, "fDomain":= ""]
subDataFeatures[grepl("^t", subDataFeatures$V2),"fDomain":= "Time"]
subDataFeatures[grepl("^f", subDataFeatures$V2),"fDomain":= "Freq"]
## -    Add Descriptive Labels for instrument used
subDataFeatures[, "fInstrument":= ""]
subDataFeatures[grepl("Acc", subDataFeatures$V2),"fInstrument":= "Accelerometer"]
subDataFeatures[grepl("Gyro", subDataFeatures$V2),"fInstrument":= "Gyroscope"]
## -    Add Descriptive Labels for whether acceleration was used
subDataFeatures[, "fAcceleration":= ""]
subDataFeatures[grepl("BodyAcc", subDataFeatures$V2),"fAcceleration":= "Body"]
subDataFeatures[grepl("GravityAcc", subDataFeatures$V2),"fAcceleration":= "Gravity"]
## -    Add Descriptive Labels for whether Mean/SD was used
subDataFeatures[, "fVariable":= ""]
subDataFeatures[grepl("mean()", subDataFeatures$V2),"fVariable":= "Mean"]
subDataFeatures[grepl("std()", subDataFeatures$V2),"fVariable":= "SD"]
## -    Add Descriptive Labels for Axis
subDataFeatures[, "fAxis":= ""]
subDataFeatures[grepl("-X", subDataFeatures$V2),"fAxis":= "X"]
subDataFeatures[grepl("-Y", subDataFeatures$V2),"fAxis":= "Y"]
subDataFeatures[grepl("-Z", subDataFeatures$V2),"fAxis":= "Z"]
## -    Add Descriptive Labels if Jerk
subDataFeatures[, "fJerk":= ""]
subDataFeatures[grepl("Jerk", subDataFeatures$V2),"fJerk":= "Jerk"]
## -    Add Descriptive Labels if Manganitude
subDataFeatures[, "fMagnitude":= ""]
subDataFeatures[grepl("Mag", subDataFeatures$V2),"fMagnitude":= "Magnitude"]
Descriptive_Varitable_Names <- paste0(subDataFeatures$fVariable, subDataFeatures$fJerk, subDataFeatures$fDomain, subDataFeatures$fMagnitude, "Of", subDataFeatures$fAcceleration,subDataFeatures$fInstrument, subDataFeatures$fAxis)
subDataFeatures[, "DESCRIPTIVE_VARIABLE_NAMES":= Descriptive_Varitable_Names]
setnames(subDataWithActivityName,  names(subDataWithActivityName), c("LABEL_NUM", "SUBJECT_NUM", subDataFeatures$DESCRIPTIVE_VARIABLE_NAMES, "ACTIVITY_NAME"))
## 5. From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
idLabels =  c("LABEL_NUM", "SUBJECT_NUM", "ACTIVITY_NAME")
dataLabels = c(subDataFeatures$DESCRIPTIVE_VARIABLE_NAMES)
meltData = melt(subDataWithActivityName, id = idLabels, measure.vars = dataLabels)
tidyData = dcast(meltData, LABEL_NUM + SUBJECT_NUM + ACTIVITY_NAME ~ variable, mean)
View(dataTestData)
View(tidyData)
View(dataTestLabel)
View(meltData)
View(tidyData)
View(subDataFeatures)
?melt
View(subDataWithActivityName)
View(meltData)
View(dataLabel)
View(dataLabel)
View(dataLabel)
##Set program locale to English
Sys.setlocale(category = "LC_ALL", locale = "English")
##Load Libraries
if (!require("data.table")) {
install.packages("data.table")
}
if (!require("reshape2")) {
install.packages("reshape2")
}
require("data.table")
require("reshape2")
library(data.table)
library(reshape2)
##Full path to data
dataPath <- file.path(getwd(), "UCI HAR Dataset")
## 1. Merges the training and the test sets to create one data set.
## -    Read in data from the files
dataTrainSubject <- fread(file.path(dataPath, "train", "subject_train.txt"))
dataTestSubject  <- fread(file.path(dataPath, "test" , "subject_test.txt" ))
dataTrainLabel <- fread(file.path(dataPath, "train", "Y_train.txt"))
dataTestLabel  <- fread(file.path(dataPath, "test" , "Y_test.txt" ))
dataTrainData <- data.table(read.table(file.path(dataPath, "train", "X_train.txt")))
dataTestData  <- data.table(read.table(file.path(dataPath, "test" , "X_test.txt" )))
## -    Combine Train and Test Subject
dataSubject <- rbind(dataTrainSubject, dataTestSubject)
setnames(dataSubject, "V1", "SUBJECT_NUM")
## -    Combine Train and Test Labels
dataLabel<- rbind(dataTrainLabel, dataTestLabel)
setnames(dataLabel, "V1", "LABEL_NUM")
## -    Create One Data Set
dataOne <- cbind(cbind(dataSubject, dataLabel), rbind(dataTrainData, dataTestData))
setkey(dataOne, SUBJECT_NUM, LABEL_NUM)
View(dataOne)
dataFeatures <- fread(file.path(dataPath, "features.txt"))
View(dataFeatures)
subDataFeatures <- dataFeatures[grepl("mean\\(\\)|std\\(\\)", V2)]
View(subDataFeatures)
subDataFeatures$V1 <- subDataFeatures[, paste0("V", V1)]
View(subDataFeatures)
subDataOne <- dataOne[, c(key(dataOne), subDataFeatures$V1), with=FALSE]
View(subDataOne)
## -    Read in data from files
dataActivityName <- fread(file.path(dataPath, "activity_labels.txt"))
setnames(dataActivityName, names(dataActivityName), c("LABEL_NUM", "ACTIVITY_NAME"))
## -    Add descriptive activity name column
subDataWithActivityName <- merge(subDataOne, dataActivityName, by="LABEL_NUM", all.x=TRUE)
## 4. Appropriately labels the data set with descriptive variable names.
## -    Add Descriptive Labels for Time/Freq domain
subDataFeatures[, "fDomain":= ""]
subDataFeatures[grepl("^t", subDataFeatures$V2),"fDomain":= "Time"]
subDataFeatures[grepl("^f", subDataFeatures$V2),"fDomain":= "Freq"]
## -    Add Descriptive Labels for instrument used
subDataFeatures[, "fInstrument":= ""]
subDataFeatures[grepl("Acc", subDataFeatures$V2),"fInstrument":= "Accelerometer"]
subDataFeatures[grepl("Gyro", subDataFeatures$V2),"fInstrument":= "Gyroscope"]
## -    Add Descriptive Labels for whether acceleration was used
subDataFeatures[, "fAcceleration":= ""]
subDataFeatures[grepl("BodyAcc", subDataFeatures$V2),"fAcceleration":= "Body"]
subDataFeatures[grepl("GravityAcc", subDataFeatures$V2),"fAcceleration":= "Gravity"]
## -    Add Descriptive Labels for whether Mean/SD was used
subDataFeatures[, "fVariable":= ""]
subDataFeatures[grepl("mean()", subDataFeatures$V2),"fVariable":= "Mean"]
subDataFeatures[grepl("std()", subDataFeatures$V2),"fVariable":= "SD"]
## -    Add Descriptive Labels for Axis
subDataFeatures[, "fAxis":= ""]
subDataFeatures[grepl("-X", subDataFeatures$V2),"fAxis":= "X"]
subDataFeatures[grepl("-Y", subDataFeatures$V2),"fAxis":= "Y"]
subDataFeatures[grepl("-Z", subDataFeatures$V2),"fAxis":= "Z"]
## -    Add Descriptive Labels if Jerk
subDataFeatures[, "fJerk":= ""]
subDataFeatures[grepl("Jerk", subDataFeatures$V2),"fJerk":= "Jerk"]
## -    Add Descriptive Labels if Manganitude
subDataFeatures[, "fMagnitude":= ""]
subDataFeatures[grepl("Mag", subDataFeatures$V2),"fMagnitude":= "Magnitude"]
Descriptive_Varitable_Names <- paste0(subDataFeatures$fVariable, subDataFeatures$fJerk, subDataFeatures$fDomain, subDataFeatures$fMagnitude, "Of", subDataFeatures$fAcceleration,subDataFeatures$fInstrument, subDataFeatures$fAxis)
subDataFeatures[, "DESCRIPTIVE_VARIABLE_NAMES":= Descriptive_Varitable_Names]
setnames(subDataWithActivityName,  names(subDataWithActivityName), c("LABEL_NUM", "SUBJECT_NUM", subDataFeatures$DESCRIPTIVE_VARIABLE_NAMES, "ACTIVITY_NAME"))
View(subDataOne)
idLabels =  c("LABEL_NUM", "SUBJECT_NUM", "ACTIVITY_NAME")
dataLabels = c(subDataFeatures$DESCRIPTIVE_VARIABLE_NAMES)
meltData = melt(subDataWithActivityName, id = idLabels, measure.vars = dataLabels)
tidyData = dcast(meltData, LABEL_NUM + SUBJECT_NUM + ACTIVITY_NAME ~ variable, mean)
View(subDataOne)
View(subDataWithActivityName)
View(tidyData)
View(meltData)
##Set program locale to English
Sys.setlocale(category = "LC_ALL", locale = "English")
##Load Libraries
if (!require("data.table")) {
install.packages("data.table")
}
if (!require("reshape2")) {
install.packages("reshape2")
}
require("data.table")
require("reshape2")
library(data.table)
library(reshape2)
##Full path to data
dataPath <- file.path(getwd(), "UCI HAR Dataset")
## 1. Merges the training and the test sets to create one data set.
## -    Read in data from the files
dataTrainSubject <- fread(file.path(dataPath, "train", "subject_train.txt"))
dataTestSubject  <- fread(file.path(dataPath, "test" , "subject_test.txt" ))
dataTrainLabel <- fread(file.path(dataPath, "train", "Y_train.txt"))
dataTestLabel  <- fread(file.path(dataPath, "test" , "Y_test.txt" ))
dataTrainData <- data.table(read.table(file.path(dataPath, "train", "X_train.txt")))
dataTestData  <- data.table(read.table(file.path(dataPath, "test" , "X_test.txt" )))
## -    Combine Train and Test Subject
dataSubject <- rbind(dataTrainSubject, dataTestSubject)
setnames(dataSubject, "V1", "SUBJECT_ID")
## -    Combine Train and Test Labels
dataLabel<- rbind(dataTrainLabel, dataTestLabel)
setnames(dataLabel, "V1", "LABEL_NUM")
## -    Create One Data Set
dataOne <- cbind(cbind(dataSubject, dataLabel), rbind(dataTrainData, dataTestData))
setkey(dataOne, SUBJECT_ID, LABEL_NUM)
## 2. Extracts only the measurements on the mean and standard deviation for each measurement.
## -    Read in data from files
dataFeatures <- fread(file.path(dataPath, "features.txt"))
## -    Create a subset of measurements for the mean and standard deviation.
subDataFeatures <- dataFeatures[grepl("mean\\(\\)|std\\(\\)", V2)]
## -    Convert representation of column names to match those of dataOne
subDataFeatures$V1 <- subDataFeatures[, paste0("V", V1)]
## -    Extract subset that contains measurements on the mean and standard deviation.
subDataOne <- dataOne[, c(key(dataOne), subDataFeatures$V1), with=FALSE]
## 3. Uses descriptive activity names to name the activities in the data set
## -    Read in data from files
dataActivityName <- fread(file.path(dataPath, "activity_labels.txt"))
setnames(dataActivityName, names(dataActivityName), c("LABEL_NUM", "ACTIVITY_NAME"))
## -    Add descriptive activity name column
subDataWithActivityName <- merge(subDataOne, dataActivityName, by="LABEL_NUM", all.x=TRUE)
subDataWithActivityName$LABEL_NUM <- NULL
## 4. Appropriately labels the data set with descriptive variable names.
## -    Add Descriptive Labels for Time/Freq domain
subDataFeatures[, "fDomain":= ""]
subDataFeatures[grepl("^t", subDataFeatures$V2),"fDomain":= "Time"]
subDataFeatures[grepl("^f", subDataFeatures$V2),"fDomain":= "Freq"]
## -    Add Descriptive Labels for instrument used
subDataFeatures[, "fInstrument":= ""]
subDataFeatures[grepl("Acc", subDataFeatures$V2),"fInstrument":= "Accelerometer"]
subDataFeatures[grepl("Gyro", subDataFeatures$V2),"fInstrument":= "Gyroscope"]
## -    Add Descriptive Labels for whether acceleration was used
subDataFeatures[, "fAcceleration":= ""]
subDataFeatures[grepl("BodyAcc", subDataFeatures$V2),"fAcceleration":= "Body"]
subDataFeatures[grepl("GravityAcc", subDataFeatures$V2),"fAcceleration":= "Gravity"]
## -    Add Descriptive Labels for whether Mean/SD was used
subDataFeatures[, "fVariable":= ""]
subDataFeatures[grepl("mean()", subDataFeatures$V2),"fVariable":= "Mean"]
subDataFeatures[grepl("std()", subDataFeatures$V2),"fVariable":= "SD"]
## -    Add Descriptive Labels for Axis
subDataFeatures[, "fAxis":= ""]
subDataFeatures[grepl("-X", subDataFeatures$V2),"fAxis":= "X"]
subDataFeatures[grepl("-Y", subDataFeatures$V2),"fAxis":= "Y"]
subDataFeatures[grepl("-Z", subDataFeatures$V2),"fAxis":= "Z"]
## -    Add Descriptive Labels if Jerk
subDataFeatures[, "fJerk":= ""]
subDataFeatures[grepl("Jerk", subDataFeatures$V2),"fJerk":= "Jerk"]
## -    Add Descriptive Labels if Manganitude
subDataFeatures[, "fMagnitude":= ""]
subDataFeatures[grepl("Mag", subDataFeatures$V2),"fMagnitude":= "Magnitude"]
Descriptive_Varitable_Names <- paste0(subDataFeatures$fVariable, subDataFeatures$fJerk, subDataFeatures$fDomain, subDataFeatures$fMagnitude, "Of", subDataFeatures$fAcceleration,subDataFeatures$fInstrument, subDataFeatures$fAxis)
subDataFeatures[, "DESCRIPTIVE_VARIABLE_NAMES":= Descriptive_Varitable_Names]
setnames(subDataWithActivityName,  names(subDataWithActivityName), c("LABEL_NUM", "SUBJECT_ID", subDataFeatures$DESCRIPTIVE_VARIABLE_NAMES, "ACTIVITY_NAME"))
## 5. From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
idLabels =  c("LABEL_NUM", "SUBJECT_ID", "ACTIVITY_NAME")
dataLabels = c(subDataFeatures$DESCRIPTIVE_VARIABLE_NAMES)
meltData = melt(subDataWithActivityName, id = idLabels, measure.vars = dataLabels)
tidyData = dcast(meltData, LABEL_NUM + SUBJECT_ID + ACTIVITY_NAME ~ variable, mean)
##Set program locale to English
Sys.setlocale(category = "LC_ALL", locale = "English")
##Load Libraries
if (!require("data.table")) {
install.packages("data.table")
}
if (!require("reshape2")) {
install.packages("reshape2")
}
require("data.table")
require("reshape2")
library(data.table)
library(reshape2)
##Full path to data
dataPath <- file.path(getwd(), "UCI HAR Dataset")
## 1. Merges the training and the test sets to create one data set.
## -    Read in data from the files
dataTrainSubject <- fread(file.path(dataPath, "train", "subject_train.txt"))
dataTestSubject  <- fread(file.path(dataPath, "test" , "subject_test.txt" ))
dataTrainLabel <- fread(file.path(dataPath, "train", "Y_train.txt"))
dataTestLabel  <- fread(file.path(dataPath, "test" , "Y_test.txt" ))
dataTrainData <- data.table(read.table(file.path(dataPath, "train", "X_train.txt")))
dataTestData  <- data.table(read.table(file.path(dataPath, "test" , "X_test.txt" )))
## -    Combine Train and Test Subject
dataSubject <- rbind(dataTrainSubject, dataTestSubject)
setnames(dataSubject, "V1", "SUBJECT_ID")
## -    Combine Train and Test Labels
dataLabel<- rbind(dataTrainLabel, dataTestLabel)
setnames(dataLabel, "V1", "LABEL_NUM")
## -    Create One Data Set
dataOne <- cbind(cbind(dataSubject, dataLabel), rbind(dataTrainData, dataTestData))
setkey(dataOne, SUBJECT_ID, LABEL_NUM)
## 2. Extracts only the measurements on the mean and standard deviation for each measurement.
## -    Read in data from files
dataFeatures <- fread(file.path(dataPath, "features.txt"))
## -    Create a subset of measurements for the mean and standard deviation.
subDataFeatures <- dataFeatures[grepl("mean\\(\\)|std\\(\\)", V2)]
## -    Convert representation of column names to match those of dataOne
subDataFeatures$V1 <- subDataFeatures[, paste0("V", V1)]
## -    Extract subset that contains measurements on the mean and standard deviation.
subDataOne <- dataOne[, c(key(dataOne), subDataFeatures$V1), with=FALSE]
## 3. Uses descriptive activity names to name the activities in the data set
## -    Read in data from files
dataActivityName <- fread(file.path(dataPath, "activity_labels.txt"))
setnames(dataActivityName, names(dataActivityName), c("LABEL_NUM", "ACTIVITY_NAME"))
## -    Add descriptive activity name column
subDataWithActivityName <- merge(subDataOne, dataActivityName, by="LABEL_NUM", all.x=TRUE)
## 4. Appropriately labels the data set with descriptive variable names.
## -    Add Descriptive Labels for Time/Freq domain
subDataFeatures[, "fDomain":= ""]
subDataFeatures[grepl("^t", subDataFeatures$V2),"fDomain":= "Time"]
subDataFeatures[grepl("^f", subDataFeatures$V2),"fDomain":= "Freq"]
## -    Add Descriptive Labels for instrument used
subDataFeatures[, "fInstrument":= ""]
subDataFeatures[grepl("Acc", subDataFeatures$V2),"fInstrument":= "Accelerometer"]
subDataFeatures[grepl("Gyro", subDataFeatures$V2),"fInstrument":= "Gyroscope"]
## -    Add Descriptive Labels for whether acceleration was used
subDataFeatures[, "fAcceleration":= ""]
subDataFeatures[grepl("BodyAcc", subDataFeatures$V2),"fAcceleration":= "Body"]
subDataFeatures[grepl("GravityAcc", subDataFeatures$V2),"fAcceleration":= "Gravity"]
## -    Add Descriptive Labels for whether Mean/SD was used
subDataFeatures[, "fVariable":= ""]
subDataFeatures[grepl("mean()", subDataFeatures$V2),"fVariable":= "Mean"]
subDataFeatures[grepl("std()", subDataFeatures$V2),"fVariable":= "SD"]
## -    Add Descriptive Labels for Axis
subDataFeatures[, "fAxis":= ""]
subDataFeatures[grepl("-X", subDataFeatures$V2),"fAxis":= "X"]
subDataFeatures[grepl("-Y", subDataFeatures$V2),"fAxis":= "Y"]
subDataFeatures[grepl("-Z", subDataFeatures$V2),"fAxis":= "Z"]
## -    Add Descriptive Labels if Jerk
subDataFeatures[, "fJerk":= ""]
subDataFeatures[grepl("Jerk", subDataFeatures$V2),"fJerk":= "Jerk"]
## -    Add Descriptive Labels if Manganitude
subDataFeatures[, "fMagnitude":= ""]
subDataFeatures[grepl("Mag", subDataFeatures$V2),"fMagnitude":= "Magnitude"]
Descriptive_Varitable_Names <- paste0(subDataFeatures$fVariable, subDataFeatures$fJerk, subDataFeatures$fDomain, subDataFeatures$fMagnitude, "Of", subDataFeatures$fAcceleration,subDataFeatures$fInstrument, subDataFeatures$fAxis)
subDataFeatures[, "DESCRIPTIVE_VARIABLE_NAMES":= Descriptive_Varitable_Names]
setnames(subDataWithActivityName,  names(subDataWithActivityName), c("LABEL_NUM", "SUBJECT_ID", subDataFeatures$DESCRIPTIVE_VARIABLE_NAMES, "ACTIVITY_NAME"))
## 5. From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
idLabels =  c("LABEL_NUM", "SUBJECT_ID", "ACTIVITY_NAME")
dataLabels = c(subDataFeatures$DESCRIPTIVE_VARIABLE_NAMES)
meltData = melt(subDataWithActivityName, id = idLabels, measure.vars = dataLabels)
tidyData = dcast(meltData, LABEL_NUM + SUBJECT_ID + ACTIVITY_NAME ~ variable, mean)
tidyData$LABEL_NUM <- NULL
View(subDataWithActivityName)
View(subDataWithActivityName)
View(tidyData)
View(tidyData)
View(dataTrainSubject)
View(dataTrainLabel)
View(dataTestLabel)
View(dataFeatures)
